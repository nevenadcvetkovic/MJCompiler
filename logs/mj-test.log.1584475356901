INFO  20:58:40,712 - Compiling source file: D:\Faks\4.godina\pp\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  20:58:40,816 - #2 program
INFO  20:58:40,816 - #17 vars
INFO  20:58:40,817 - #17 int
INFO  20:58:40,820 - #17 a
INFO  20:58:40,821 - #8 ,
INFO  20:58:40,826 - #17 niz
INFO  20:58:40,826 - #25 [
INFO  20:58:40,827 - #26 ]
INFO  20:58:40,827 - #8 ,
INFO  20:58:40,828 - #17 b
INFO  20:58:40,828 - #5 ;
INFO  20:58:40,829 - #17 char
INFO  20:58:40,830 - #17 ca
INFO  20:58:40,830 - #8 ,
INFO  20:58:40,830 - #17 cniz
INFO  20:58:40,830 - #25 [
INFO  20:58:40,830 - #26 ]
INFO  20:58:40,830 - #5 ;
INFO  20:58:40,831 - #17 bool
INFO  20:58:40,831 - #17 bb
INFO  20:58:40,831 - #8 ,
INFO  20:58:40,832 - #17 bniz
INFO  20:58:40,832 - #25 [
INFO  20:58:40,832 - #26 ]
INFO  20:58:40,832 - #5 ;
INFO  20:58:40,832 - #3 {
INFO  20:58:40,832 - #14 void
INFO  20:58:40,834 - #17 main
INFO  20:58:40,835 - #6 (
INFO  20:58:40,837 - #7 )
INFO  20:58:40,838 - #3 {
INFO  20:58:40,839 - #17 a
INFO  20:58:40,841 - #13 =
INFO  20:58:40,842 - #16 5
INFO  20:58:40,844 - #5 ;
INFO  20:58:40,844 - #17 niz
INFO  20:58:40,845 - #13 =
INFO  20:58:40,845 - #48 new
INFO  20:58:40,845 - #17 int
INFO  20:58:40,845 - #25 [
INFO  20:58:40,845 - #16 4
INFO  20:58:40,845 - #26 ]
INFO  20:58:40,846 - #5 ;
INFO  20:58:40,846 - #17 niz
INFO  20:58:40,847 - #25 [
INFO  20:58:40,847 - #16 2
INFO  20:58:40,847 - #26 ]
INFO  20:58:40,847 - #13 =
INFO  20:58:40,848 - #22 c
INFO  20:58:40,848 - #5 ;
INFO  20:58:40,848 - #4 }
INFO  20:58:40,849 - #4 }
INFO  20:58:40,879 - Program(
  ProgName(
   vars
  ) [ProgName]
  DeclarationsVarsConsts(
    DeclarationsVarsConsts(
      DeclarationsVarsConsts(
        NoDecl(
        ) [NoDecl]
        DeclVars(
          VarDecl(
            Type(
             int
            ) [Type]
            VarIdents(
              VarIdents(
                SingleIdent(
                  VarIdent(
                   a
                    NoVarSquares(
                    ) [NoVarSquares]
                  ) [VarIdent]
                ) [SingleIdent]
                VarIdent(
                 niz
                  VarSquare(
                  ) [VarSquare]
                ) [VarIdent]
              ) [VarIdents]
              VarIdent(
               b
                NoVarSquares(
                ) [NoVarSquares]
              ) [VarIdent]
            ) [VarIdents]
          ) [VarDecl]
        ) [DeclVars]
      ) [DeclarationsVarsConsts]
      DeclVars(
        VarDecl(
          Type(
           char
          ) [Type]
          VarIdents(
            SingleIdent(
              VarIdent(
               ca
                NoVarSquares(
                ) [NoVarSquares]
              ) [VarIdent]
            ) [SingleIdent]
            VarIdent(
             cniz
              VarSquare(
              ) [VarSquare]
            ) [VarIdent]
          ) [VarIdents]
        ) [VarDecl]
      ) [DeclVars]
    ) [DeclarationsVarsConsts]
    DeclVars(
      VarDecl(
        Type(
         bool
        ) [Type]
        VarIdents(
          SingleIdent(
            VarIdent(
             bb
              NoVarSquares(
              ) [NoVarSquares]
            ) [VarIdent]
          ) [SingleIdent]
          VarIdent(
           bniz
            VarSquare(
            ) [VarSquare]
          ) [VarIdent]
        ) [VarIdents]
      ) [VarDecl]
    ) [DeclVars]
  ) [DeclarationsVarsConsts]
  MethodDeclarations(
    NoMethodDecl(
    ) [NoMethodDecl]
    MethodDecl(
      MethodTypeName(
        VoidType(
        ) [VoidType]
       main
      ) [MethodTypeName]
      NoFormParam(
      ) [NoFormParam]
      NoVarDecl(
      ) [NoVarDecl]
      Statements(
        Statements(
          Statements(
            NoStmt(
            ) [NoStmt]
            DesStatementClass(
              DesignEqExpr(
                DesignatorName(
                 a
                ) [DesignatorName]
                AssEq(
                ) [AssEq]
                TermExpr(
                  TermFactor(
                    ConstFactor(
                      FactNumConst(
                       5
                      ) [FactNumConst]
                    ) [ConstFactor]
                  ) [TermFactor]
                ) [TermExpr]
              ) [DesignEqExpr]
            ) [DesStatementClass]
          ) [Statements]
          DesStatementClass(
            DesignEqExpr(
              DesignatorName(
               niz
              ) [DesignatorName]
              AssEq(
              ) [AssEq]
              TermExpr(
                TermFactor(
                  FactorNew(
                    Type(
                     int
                    ) [Type]
                    NewFactorExp(
                      TermExpr(
                        TermFactor(
                          ConstFactor(
                            FactNumConst(
                             4
                            ) [FactNumConst]
                          ) [ConstFactor]
                        ) [TermFactor]
                      ) [TermExpr]
                    ) [NewFactorExp]
                  ) [FactorNew]
                ) [TermFactor]
              ) [TermExpr]
            ) [DesignEqExpr]
          ) [DesStatementClass]
        ) [Statements]
        DesStatementClass(
          DesignEqExpr(
            DesignatorClass(
              DesignatorName(
               niz
              ) [DesignatorName]
              SQExp(
                TermExpr(
                  TermFactor(
                    ConstFactor(
                      FactNumConst(
                       2
                      ) [FactNumConst]
                    ) [ConstFactor]
                  ) [TermFactor]
                ) [TermExpr]
              ) [SQExp]
            ) [DesignatorClass]
            AssEq(
            ) [AssEq]
            TermExpr(
              TermFactor(
                ConstFactor(
                  FactCharConst(
                   c
                  ) [FactCharConst]
                ) [ConstFactor]
              ) [TermFactor]
            ) [TermExpr]
          ) [DesignEqExpr]
        ) [DesStatementClass]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  20:58:40,880 - ===================================
INFO  20:58:40,889 - Deklarisana promenljiva a na liniji 5
INFO  20:58:40,890 - Deklarisan niz niz na liniji 5
INFO  20:58:40,890 - Deklarisana promenljiva b na liniji 5
INFO  20:58:40,890 - Deklarisana promenljiva ca na liniji 6
INFO  20:58:40,897 - Deklarisan niz cniz na liniji 6
INFO  20:58:40,897 - Deklarisana promenljiva bb na liniji 7
INFO  20:58:40,897 - Deklarisan niz bniz na liniji 7
INFO  20:58:40,897 - Obradjuje se funkcija main na liniji 14
INFO  20:58:40,897 - Koriscenje promenljive  na liniji 16
INFO  20:58:40,897 - DesignatorName(
 a
) [DesignatorName] na liniji 16
INFO  20:58:40,898 - Koriscenje promenljive  na liniji 17
INFO  20:58:40,898 - DesignatorName(
 niz
) [DesignatorName] na liniji 17
INFO  20:58:40,898 - Koriscenje promenljive  na liniji 18
INFO  20:58:40,898 - DesignatorName(
 niz
) [DesignatorName] na liniji 18
INFO  20:58:40,898 - Pristup nizu  na liniji 18
INFO  20:58:40,898 - DesignatorClass(
  DesignatorName(
   niz
  ) [DesignatorName]
  SQExp(
    TermExpr(
      TermFactor(
        ConstFactor(
          FactNumConst(
           2
          ) [FactNumConst]
        ) [ConstFactor]
      ) [TermFactor]
    ) [TermExpr]
  ) [SQExp]
) [DesignatorClass] na liniji 18
ERROR 20:58:40,898 - Greska na liniji 18 : nekompatibilni tipovi u dodeli vrednosti 
INFO  20:58:40,898 - Print calls = 0
INFO  20:58:40,898 - Read calls = 0
INFO  20:58:40,898 - Broj promenljivih = 4
INFO  20:58:40,899 - Broj nizova = 3
INFO  20:58:40,899 - Broj konstanti = 0
ERROR 20:58:40,900 - Parsiranje NIJE uspesno zavrseno!
