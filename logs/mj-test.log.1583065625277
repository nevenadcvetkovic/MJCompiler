INFO  13:25:18,444 - Compiling source file: D:\Faks\4.godina\pp\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  13:25:19,261 - #2 program
INFO  13:25:19,261 - #16 test302
INFO  13:25:19,262 - #22 const
INFO  13:25:19,272 - #16 int
INFO  13:25:19,272 - #16 jedan
INFO  13:25:19,276 - #13 =
INFO  13:25:19,276 - #15 1
INFO  13:25:19,276 - #5 ;
INFO  13:25:19,288 - #16 int
INFO  13:25:19,304 - #16 i
INFO  13:25:19,304 - #8 ,
INFO  13:25:19,321 - #16 j
INFO  13:25:19,321 - #5 ;
INFO  13:25:19,322 - #16 bool
INFO  13:25:19,322 - #16 ibool
INFO  13:25:19,323 - #5 ;
INFO  13:25:19,324 - #16 int
INFO  13:25:19,325 - #16 niz
INFO  13:25:19,326 - #23 [
INFO  13:25:19,326 - #24 ]
INFO  13:25:19,327 - #5 ;
INFO  13:25:19,329 - #3 {
INFO  13:25:19,330 - #14 void
INFO  13:25:19,332 - #16 main
INFO  13:25:19,349 - #6 (
INFO  13:25:19,361 - #7 )
INFO  13:25:19,365 - #3 {
INFO  13:25:19,367 - #19 for
INFO  13:25:19,370 - #6 (
INFO  13:25:19,371 - #16 i
INFO  13:25:19,371 - #13 =
INFO  13:25:19,373 - #15 0
INFO  13:25:19,389 - #5 ;
INFO  13:25:19,395 - #16 i
INFO  13:25:19,395 - #34 <
INFO  13:25:19,398 - #15 5
INFO  13:25:19,425 - #5 ;
INFO  13:25:19,439 - #16 i
INFO  13:25:19,440 - #28 ++
INFO  13:25:19,440 - #7 )
INFO  13:25:19,441 - #3 {
INFO  13:25:19,442 - #9 print
INFO  13:25:19,442 - #6 (
INFO  13:25:19,442 - #16 i
INFO  13:25:19,442 - #7 )
INFO  13:25:19,451 - #5 ;
INFO  13:25:19,451 - #19 for
INFO  13:25:19,451 - #6 (
INFO  13:25:19,451 - #16 j
INFO  13:25:19,452 - #13 =
INFO  13:25:19,452 - #15 0
INFO  13:25:19,452 - #5 ;
INFO  13:25:19,452 - #16 j
INFO  13:25:19,452 - #34 <
INFO  13:25:19,452 - #15 5
INFO  13:25:19,452 - #5 ;
INFO  13:25:19,453 - #16 j
INFO  13:25:19,453 - #28 ++
INFO  13:25:19,453 - #7 )
INFO  13:25:19,453 - #3 {
INFO  13:25:19,453 - #17 if
INFO  13:25:19,453 - #6 (
INFO  13:25:19,454 - #16 j
INFO  13:25:19,454 - #30 ==
INFO  13:25:19,455 - #15 0
INFO  13:25:19,469 - #7 )
INFO  13:25:19,469 - #9 print
INFO  13:25:19,469 - #6 (
INFO  13:25:19,469 - #16 eol
INFO  13:25:19,470 - #7 )
INFO  13:25:19,470 - #5 ;
INFO  13:25:19,470 - #9 print
INFO  13:25:19,470 - #6 (
INFO  13:25:19,470 - #16 j
INFO  13:25:19,471 - #7 )
INFO  13:25:19,471 - #5 ;
INFO  13:25:19,472 - #4 }
INFO  13:25:19,472 - #9 print
INFO  13:25:19,473 - #6 (
INFO  13:25:19,474 - #16 eol
INFO  13:25:19,474 - #7 )
INFO  13:25:19,474 - #5 ;
INFO  13:25:19,474 - #4 }
INFO  13:25:19,475 - #17 if
INFO  13:25:19,475 - #6 (
INFO  13:25:19,475 - #16 i
INFO  13:25:19,475 - #30 ==
INFO  13:25:19,475 - #15 5
INFO  13:25:19,475 - #7 )
INFO  13:25:19,476 - #3 {
INFO  13:25:19,476 - #17 if
INFO  13:25:19,476 - #6 (
INFO  13:25:19,476 - #16 j
INFO  13:25:19,476 - #30 ==
INFO  13:25:19,476 - #15 5
INFO  13:25:19,477 - #7 )
INFO  13:25:19,477 - #3 {
INFO  13:25:19,477 - #9 print
INFO  13:25:19,477 - #6 (
INFO  13:25:19,477 - #20 a
INFO  13:25:19,477 - #7 )
INFO  13:25:19,478 - #5 ;
INFO  13:25:19,478 - #4 }
INFO  13:25:19,478 - #18 else
INFO  13:25:19,478 - #17 if
INFO  13:25:19,496 - #6 (
INFO  13:25:19,496 - #15 7
INFO  13:25:19,497 - #31 !=
INFO  13:25:19,497 - #15 7
INFO  13:25:19,498 - #7 )
INFO  13:25:19,499 - #3 {
INFO  13:25:19,499 - #9 print
INFO  13:25:19,499 - #6 (
INFO  13:25:19,499 - #20 e
INFO  13:25:19,499 - #7 )
INFO  13:25:19,499 - #4 }
ERROR 13:25:19,499 - 
Sintaksna greska na liniji 32
INFO  13:25:19,500 - #18 else
INFO  13:25:19,500 - #9 print
INFO  13:25:19,500 - #6 (
INFO  13:25:19,500 - #20 g
INFO  13:25:19,501 - #7 )
INFO  13:25:19,501 - #5 ;
INFO  13:25:19,508 - #4 }
INFO  13:25:19,509 - #18 else
INFO  13:25:19,509 - #3 {
ERROR 13:25:19,509 - Izvrsen oporavak do ; u liniji 31
INFO  13:25:19,700 - #9 print
INFO  13:25:19,700 - #6 (
INFO  13:25:19,701 - #20 i
INFO  13:25:19,701 - #7 )
INFO  13:25:19,701 - #5 ;
INFO  13:25:19,701 - #4 }
INFO  13:25:19,701 - #4 }
INFO  13:25:19,702 - #4 }
ERROR 13:25:19,702 - 
Sintaksna greska na liniji 44
ERROR 13:25:19,702 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 44
