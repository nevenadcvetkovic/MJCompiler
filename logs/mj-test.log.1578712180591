INFO  04:09:05,327 - Compiling source file: D:\Faks\4.godina\pp\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  04:09:05,413 - #2 program
INFO  04:09:05,414 - #15 test302
INFO  04:09:05,414 - #21 const
INFO  04:09:05,417 - #15 int
INFO  04:09:05,417 - #15 jedan
INFO  04:09:05,418 - #12 =
INFO  04:09:05,419 - #14 1
INFO  04:09:05,419 - #5 ;
INFO  04:09:05,421 - #15 int
INFO  04:09:05,423 - #15 i
INFO  04:09:05,423 - #5 ;
INFO  04:09:05,427 - #15 bool
INFO  04:09:05,429 - #15 ibool
INFO  04:09:05,429 - #5 ;
INFO  04:09:05,431 - #15 int
INFO  04:09:05,432 - #15 niz
INFO  04:09:05,432 - #22 [
INFO  04:09:05,432 - #23 ]
INFO  04:09:05,432 - #5 ;
INFO  04:09:05,433 - #3 {
INFO  04:09:05,434 - #15 int
INFO  04:09:05,435 - #15 sum
INFO  04:09:05,436 - #6 (
INFO  04:09:05,437 - #15 int
INFO  04:09:05,438 - #15 z
INFO  04:09:05,438 - #8 ,
INFO  04:09:05,441 - #15 int
INFO  04:09:05,441 - #15 d
INFO  04:09:05,442 - #7 )
INFO  04:09:05,443 - #3 {
INFO  04:09:05,444 - #10 return
INFO  04:09:05,445 - #15 z
INFO  04:09:05,445 - #11 +
INFO  04:09:05,448 - #15 d
INFO  04:09:05,450 - #5 ;
INFO  04:09:05,451 - #4 }
INFO  04:09:05,452 - #15 int
INFO  04:09:05,454 - #15 inkrement
INFO  04:09:05,454 - #6 (
INFO  04:09:05,454 - #15 int
INFO  04:09:05,454 - #15 a
INFO  04:09:05,454 - #8 ,
INFO  04:09:05,454 - #15 int
INFO  04:09:05,455 - #15 inc
INFO  04:09:05,455 - #7 )
INFO  04:09:05,455 - #15 int
INFO  04:09:05,455 - #15 pom
INFO  04:09:05,455 - #5 ;
INFO  04:09:05,455 - #3 {
INFO  04:09:05,456 - #16 if
INFO  04:09:05,456 - #6 (
INFO  04:09:05,456 - #15 inc
INFO  04:09:05,456 - #29 ==
INFO  04:09:05,456 - #15 jedan
INFO  04:09:05,459 - #7 )
INFO  04:09:05,461 - #15 pom
INFO  04:09:05,461 - #12 =
INFO  04:09:05,462 - #14 1
INFO  04:09:05,462 - #5 ;
INFO  04:09:05,470 - #17 else
INFO  04:09:05,471 - #16 if
INFO  04:09:05,471 - #6 (
INFO  04:09:05,472 - #15 inc
INFO  04:09:05,477 - #29 ==
INFO  04:09:05,478 - #14 2
INFO  04:09:05,478 - #7 )
INFO  04:09:05,478 - #15 pom
INFO  04:09:05,478 - #12 =
INFO  04:09:05,479 - #15 a
INFO  04:09:05,479 - #5 ;
INFO  04:09:05,479 - #10 return
INFO  04:09:05,481 - #15 sum
INFO  04:09:05,481 - #6 (
INFO  04:09:05,482 - #15 a
INFO  04:09:05,482 - #8 ,
INFO  04:09:05,482 - #15 pom
INFO  04:09:05,482 - #7 )
INFO  04:09:05,483 - #5 ;
INFO  04:09:05,483 - #4 }
INFO  04:09:05,483 - #15 bool
INFO  04:09:05,483 - #15 verify
INFO  04:09:05,484 - #6 (
INFO  04:09:05,484 - #7 )
INFO  04:09:05,485 - #3 {
INFO  04:09:05,485 - #9 print
INFO  04:09:05,485 - #6 (
INFO  04:09:05,485 - #19 v
INFO  04:09:05,485 - #7 )
INFO  04:09:05,487 - #5 ;
INFO  04:09:05,487 - #10 return
INFO  04:09:05,487 - #20 false
INFO  04:09:05,487 - #5 ;
INFO  04:09:05,488 - #4 }
INFO  04:09:05,488 - #13 void
INFO  04:09:05,488 - #15 main
INFO  04:09:05,489 - #6 (
INFO  04:09:05,489 - #7 )
INFO  04:09:05,489 - #3 {
INFO  04:09:05,489 - #16 if
INFO  04:09:05,489 - #6 (
INFO  04:09:05,490 - #14 1
INFO  04:09:05,490 - #30 !=
INFO  04:09:05,490 - #14 1
INFO  04:09:05,491 - #7 )
INFO  04:09:05,491 - #9 print
INFO  04:09:05,491 - #6 (
INFO  04:09:05,491 - #37 -
INFO  04:09:05,492 - #14 6
INFO  04:09:05,492 - #7 )
INFO  04:09:05,492 - #5 ;
INFO  04:09:05,492 - #17 else
INFO  04:09:05,492 - #9 print
INFO  04:09:05,492 - #6 (
INFO  04:09:05,492 - #14 0
INFO  04:09:05,492 - #7 )
INFO  04:09:05,493 - #5 ;
INFO  04:09:05,493 - #15 ibool
INFO  04:09:05,493 - #12 =
INFO  04:09:05,493 - #20 false
INFO  04:09:05,493 - #5 ;
INFO  04:09:05,493 - #15 i
INFO  04:09:05,493 - #12 =
INFO  04:09:05,493 - #14 0
INFO  04:09:05,493 - #5 ;
INFO  04:09:05,494 - #18 for
INFO  04:09:05,494 - #6 (
INFO  04:09:05,494 - #15 i
INFO  04:09:05,494 - #12 =
INFO  04:09:05,494 - #14 0
INFO  04:09:05,494 - #5 ;
INFO  04:09:05,494 - #15 i
INFO  04:09:05,495 - #33 <
INFO  04:09:05,495 - #14 5
INFO  04:09:05,497 - #5 ;
INFO  04:09:05,497 - #15 i
INFO  04:09:05,497 - #27 ++
INFO  04:09:05,497 - #7 )
INFO  04:09:05,498 - #3 {
INFO  04:09:05,498 - #16 if
INFO  04:09:05,498 - #6 (
INFO  04:09:05,498 - #15 i
INFO  04:09:05,498 - #29 ==
INFO  04:09:05,498 - #14 2
INFO  04:09:05,498 - #7 )
INFO  04:09:05,498 - #15 ibool
INFO  04:09:05,498 - #12 =
INFO  04:09:05,498 - #20 true
INFO  04:09:05,499 - #5 ;
INFO  04:09:05,499 - #4 }
INFO  04:09:05,499 - #16 if
INFO  04:09:05,499 - #6 (
INFO  04:09:05,499 - #15 ibool
INFO  04:09:05,499 - #7 )
INFO  04:09:05,500 - #16 if
INFO  04:09:05,501 - #6 (
INFO  04:09:05,501 - #15 i
INFO  04:09:05,501 - #29 ==
INFO  04:09:05,501 - #14 5
INFO  04:09:05,501 - #7 )
INFO  04:09:05,501 - #9 print
INFO  04:09:05,501 - #6 (
INFO  04:09:05,501 - #14 1
INFO  04:09:05,501 - #7 )
INFO  04:09:05,501 - #5 ;
INFO  04:09:05,501 - #17 else
INFO  04:09:05,502 - #9 print
INFO  04:09:05,502 - #6 (
INFO  04:09:05,502 - #37 -
INFO  04:09:05,502 - #14 1
INFO  04:09:05,502 - #7 )
INFO  04:09:05,502 - #5 ;
INFO  04:09:05,502 - #15 niz
INFO  04:09:05,502 - #12 =
INFO  04:09:05,502 - #41 new
INFO  04:09:05,502 - #15 int
INFO  04:09:05,502 - #22 [
INFO  04:09:05,502 - #14 3
INFO  04:09:05,502 - #23 ]
INFO  04:09:05,503 - #5 ;
INFO  04:09:05,503 - #15 niz
INFO  04:09:05,503 - #22 [
INFO  04:09:05,503 - #14 0
INFO  04:09:05,503 - #23 ]
INFO  04:09:05,504 - #12 =
INFO  04:09:05,504 - #14 1
INFO  04:09:05,504 - #5 ;
INFO  04:09:05,504 - #15 niz
INFO  04:09:05,504 - #22 [
INFO  04:09:05,504 - #14 1
INFO  04:09:05,504 - #23 ]
INFO  04:09:05,505 - #12 =
INFO  04:09:05,505 - #14 2
INFO  04:09:05,505 - #5 ;
INFO  04:09:05,505 - #15 niz
INFO  04:09:05,505 - #22 [
INFO  04:09:05,505 - #14 2
INFO  04:09:05,505 - #23 ]
INFO  04:09:05,505 - #12 =
INFO  04:09:05,506 - #15 sum
INFO  04:09:05,506 - #6 (
INFO  04:09:05,506 - #15 niz
INFO  04:09:05,506 - #22 [
INFO  04:09:05,506 - #14 1
INFO  04:09:05,506 - #23 ]
INFO  04:09:05,506 - #8 ,
INFO  04:09:05,506 - #15 niz
INFO  04:09:05,506 - #22 [
INFO  04:09:05,506 - #14 0
INFO  04:09:05,506 - #23 ]
INFO  04:09:05,506 - #7 )
INFO  04:09:05,507 - #11 +
INFO  04:09:05,507 - #14 1
INFO  04:09:05,507 - #5 ;
INFO  04:09:05,507 - #16 if
INFO  04:09:05,507 - #6 (
INFO  04:09:05,507 - #15 niz
INFO  04:09:05,507 - #22 [
INFO  04:09:05,507 - #14 2
INFO  04:09:05,507 - #23 ]
INFO  04:09:05,507 - #29 ==
INFO  04:09:05,507 - #14 4
INFO  04:09:05,507 - #35 ||
INFO  04:09:05,508 - #15 verify
INFO  04:09:05,508 - #6 (
INFO  04:09:05,508 - #7 )
INFO  04:09:05,509 - #7 )
INFO  04:09:05,509 - #9 print
INFO  04:09:05,510 - #6 (
INFO  04:09:05,510 - #15 ord
INFO  04:09:05,510 - #6 (
INFO  04:09:05,510 - #19 A
INFO  04:09:05,510 - #7 )
INFO  04:09:05,510 - #7 )
INFO  04:09:05,510 - #5 ;
INFO  04:09:05,510 - #17 else
INFO  04:09:05,510 - #9 print
INFO  04:09:05,510 - #6 (
INFO  04:09:05,510 - #15 ord
INFO  04:09:05,510 - #6 (
INFO  04:09:05,511 - #19 a
INFO  04:09:05,511 - #7 )
INFO  04:09:05,511 - #7 )
INFO  04:09:05,511 - #5 ;
INFO  04:09:05,511 - #9 print
INFO  04:09:05,511 - #6 (
INFO  04:09:05,511 - #15 eol
INFO  04:09:05,513 - #7 )
INFO  04:09:05,513 - #5 ;
INFO  04:09:05,513 - #15 i
INFO  04:09:05,513 - #12 =
INFO  04:09:05,514 - #14 0
INFO  04:09:05,514 - #5 ;
INFO  04:09:05,519 - #18 for
INFO  04:09:05,519 - #6 (
INFO  04:09:05,519 - #5 ;
INFO  04:09:05,521 - #15 i
INFO  04:09:05,521 - #33 <
INFO  04:09:05,521 - #14 10
INFO  04:09:05,521 - #5 ;
INFO  04:09:05,521 - #7 )
INFO  04:09:05,521 - #3 {
INFO  04:09:05,521 - #16 if
INFO  04:09:05,521 - #6 (
INFO  04:09:05,521 - #15 i
INFO  04:09:05,521 - #29 ==
INFO  04:09:05,522 - #14 3
INFO  04:09:05,522 - #7 )
INFO  04:09:05,522 - #3 {
INFO  04:09:05,522 - #15 i
INFO  04:09:05,522 - #27 ++
INFO  04:09:05,522 - #5 ;
INFO  04:09:05,522 - #26 continue
INFO  04:09:05,522 - #5 ;
INFO  04:09:05,522 - #4 }
INFO  04:09:05,523 - #16 if
INFO  04:09:05,524 - #6 (
INFO  04:09:05,524 - #15 i
INFO  04:09:05,524 - #29 ==
INFO  04:09:05,524 - #14 4
INFO  04:09:05,524 - #7 )
INFO  04:09:05,524 - #25 break
INFO  04:09:05,524 - #5 ;
INFO  04:09:05,524 - #15 i
INFO  04:09:05,525 - #12 =
INFO  04:09:05,526 - #15 inkrement
INFO  04:09:05,526 - #6 (
INFO  04:09:05,526 - #15 i
INFO  04:09:05,526 - #8 ,
INFO  04:09:05,526 - #14 1
INFO  04:09:05,526 - #7 )
INFO  04:09:05,526 - #5 ;
INFO  04:09:05,526 - #4 }
INFO  04:09:05,526 - #16 if
INFO  04:09:05,527 - #6 (
INFO  04:09:05,527 - #15 i
INFO  04:09:05,527 - #29 ==
INFO  04:09:05,527 - #14 3
INFO  04:09:05,527 - #36 &&
INFO  04:09:05,527 - #15 verify
INFO  04:09:05,527 - #6 (
INFO  04:09:05,527 - #7 )
INFO  04:09:05,527 - #7 )
INFO  04:09:05,528 - #9 print
INFO  04:09:05,528 - #6 (
INFO  04:09:05,528 - #14 4
INFO  04:09:05,528 - #7 )
INFO  04:09:05,528 - #5 ;
INFO  04:09:05,528 - #17 else
INFO  04:09:05,528 - #9 print
INFO  04:09:05,528 - #6 (
INFO  04:09:05,529 - #37 -
INFO  04:09:05,529 - #14 4
INFO  04:09:05,529 - #7 )
INFO  04:09:05,529 - #5 ;
INFO  04:09:05,529 - #24 read
INFO  04:09:05,529 - #6 (
INFO  04:09:05,529 - #15 niz
INFO  04:09:05,529 - #22 [
INFO  04:09:05,530 - #14 0
INFO  04:09:05,530 - #23 ]
INFO  04:09:05,530 - #7 )
INFO  04:09:05,530 - #5 ;
INFO  04:09:05,530 - #24 read
INFO  04:09:05,530 - #6 (
INFO  04:09:05,530 - #15 niz
INFO  04:09:05,530 - #22 [
INFO  04:09:05,530 - #14 1
INFO  04:09:05,531 - #23 ]
INFO  04:09:05,531 - #7 )
INFO  04:09:05,531 - #5 ;
INFO  04:09:05,531 - #24 read
INFO  04:09:05,531 - #6 (
INFO  04:09:05,531 - #15 niz
INFO  04:09:05,531 - #22 [
INFO  04:09:05,531 - #14 2
INFO  04:09:05,531 - #23 ]
INFO  04:09:05,531 - #7 )
INFO  04:09:05,531 - #5 ;
INFO  04:09:05,531 - #9 print
INFO  04:09:05,531 - #6 (
INFO  04:09:05,531 - #15 eol
INFO  04:09:05,531 - #7 )
INFO  04:09:05,531 - #5 ;
INFO  04:09:05,532 - #9 print
INFO  04:09:05,532 - #6 (
INFO  04:09:05,532 - #15 sum
INFO  04:09:05,532 - #6 (
INFO  04:09:05,532 - #15 sum
INFO  04:09:05,532 - #6 (
INFO  04:09:05,532 - #15 niz
INFO  04:09:05,532 - #22 [
INFO  04:09:05,532 - #14 0
INFO  04:09:05,532 - #23 ]
INFO  04:09:05,532 - #8 ,
INFO  04:09:05,532 - #15 niz
INFO  04:09:05,532 - #22 [
INFO  04:09:05,533 - #14 1
INFO  04:09:05,533 - #23 ]
INFO  04:09:05,533 - #7 )
INFO  04:09:05,533 - #8 ,
INFO  04:09:05,533 - #15 niz
INFO  04:09:05,533 - #22 [
INFO  04:09:05,533 - #14 2
INFO  04:09:05,533 - #23 ]
INFO  04:09:05,533 - #7 )
INFO  04:09:05,533 - #7 )
INFO  04:09:05,533 - #5 ;
INFO  04:09:05,533 - #9 print
INFO  04:09:05,534 - #6 (
INFO  04:09:05,534 - #15 eol
INFO  04:09:05,534 - #7 )
INFO  04:09:05,534 - #5 ;
INFO  04:09:05,534 - #9 print
INFO  04:09:05,534 - #6 (
INFO  04:09:05,534 - #15 inkrement
INFO  04:09:05,534 - #6 (
INFO  04:09:05,534 - #15 niz
INFO  04:09:05,534 - #22 [
INFO  04:09:05,534 - #14 2
INFO  04:09:05,534 - #23 ]
INFO  04:09:05,534 - #8 ,
INFO  04:09:05,534 - #14 2
INFO  04:09:05,534 - #7 )
INFO  04:09:05,535 - #7 )
INFO  04:09:05,535 - #5 ;
INFO  04:09:05,535 - #4 }
INFO  04:09:05,535 - #4 }
INFO  04:09:05,548 - ===================================
INFO  04:09:05,557 - Deklarisana konstanta jedan i ima vrednost 1 na liniji 5
INFO  04:09:05,558 - Deklarisana promenljiva i na liniji 7
INFO  04:09:05,558 - Deklarisana promenljiva ibool na liniji 8
INFO  04:09:05,558 - Deklarisan niz niz na liniji 10
INFO  04:09:05,558 - Obradjuje se funkcija sum na liniji 13
INFO  04:09:05,558 - Deklarisan parametar z na liniji 13
INFO  04:09:05,559 - Deklarisan parametar d na liniji 13
INFO  04:09:05,559 - Funkcija sum uspesno definisana na liniji 15
INFO  04:09:05,559 - Obradjuje se funkcija inkrement na liniji 18
INFO  04:09:05,559 - Deklarisan parametar a na liniji 18
INFO  04:09:05,559 - Deklarisan parametar inc na liniji 18
INFO  04:09:05,559 - Deklarisana promenljiva pom na liniji 18
INFO  04:09:05,560 - Postavljen formalni parametar z na liniji 23
INFO  04:09:05,560 - Postavljen formalni parametar d na liniji 23
INFO  04:09:05,561 - Poziv funkcije sum na liniji 23
INFO  04:09:05,561 - Funkcija inkrement uspesno definisana na liniji 23
INFO  04:09:05,561 - Obradjuje se funkcija verify na liniji 26
INFO  04:09:05,561 - Funkcija verify uspesno definisana na liniji 28
INFO  04:09:05,561 - Obradjuje se funkcija main na liniji 31
INFO  04:09:05,563 - ForStm(
  ForStmtDesign(
    DesignEqExpr(
      DesignatorName(
       i
      ) [DesignatorName]
      NoMinus(
        TermExpr(
          TermFactor(
            ConstFactor(
              FactNumConst(
               0
              ) [FactNumConst]
            ) [ConstFactor]
          ) [TermFactor]
        ) [TermExpr]
      ) [NoMinus]
    ) [DesignEqExpr]
  ) [ForStmtDesign]
  ForCond(
    SingleCondition(
      SingleFact(
        CondFact(
          NoMinus(
            TermExpr(
              TermFactor(
                FactorVar(
                  DesignatorName(
                   i
                  ) [DesignatorName]
                  NoFuncParens(
                  ) [NoFuncParens]
                ) [FactorVar]
              ) [TermFactor]
            ) [TermExpr]
          ) [NoMinus]
          RelExpression(
            Less(
            ) [Less]
            NoMinus(
              TermExpr(
                TermFactor(
                  ConstFactor(
                    FactNumConst(
                     5
                    ) [FactNumConst]
                  ) [ConstFactor]
                ) [TermFactor]
              ) [TermExpr]
            ) [NoMinus]
          ) [RelExpression]
        ) [CondFact]
      ) [SingleFact]
    ) [SingleCondition]
  ) [ForCond]
  ForStmtDesign(
    DesignInc(
      DesignatorName(
       i
      ) [DesignatorName]
    ) [DesignInc]
  ) [ForStmtDesign]
  StatementInside(
    Statements(
      NoStmt(
      ) [NoStmt]
      IfStatementNotMatch(
        SingleCondition(
          SingleFact(
            CondFact(
              NoMinus(
                TermExpr(
                  TermFactor(
                    FactorVar(
                      DesignatorName(
                       i
                      ) [DesignatorName]
                      NoFuncParens(
                      ) [NoFuncParens]
                    ) [FactorVar]
                  ) [TermFactor]
                ) [TermExpr]
              ) [NoMinus]
              RelExpression(
                Equal(
                ) [Equal]
                NoMinus(
                  TermExpr(
                    TermFactor(
                      ConstFactor(
                        FactNumConst(
                         2
                        ) [FactNumConst]
                      ) [ConstFactor]
                    ) [TermFactor]
                  ) [TermExpr]
                ) [NoMinus]
              ) [RelExpression]
            ) [CondFact]
          ) [SingleFact]
        ) [SingleCondition]
        Assignment(
          DesignEqExpr(
            DesignatorName(
             ibool
            ) [DesignatorName]
            NoMinus(
              TermExpr(
                TermFactor(
                  ConstFactor(
                    FactBoolConst(
                     true
                    ) [FactBoolConst]
                  ) [ConstFactor]
                ) [TermFactor]
              ) [TermExpr]
            ) [NoMinus]
          ) [DesignEqExpr]
        ) [Assignment]
      ) [IfStatementNotMatch]
    ) [Statements]
  ) [StatementInside]
) [ForStm] na liniji 38
INFO  04:09:05,564 - rs.etf.pp1.symboltable.concepts.Obj@6e2c634b na liniji 48
INFO  04:09:05,565 - rs.etf.pp1.symboltable.concepts.Obj@6e2c634b na liniji 49
INFO  04:09:05,565 - rs.etf.pp1.symboltable.concepts.Obj@6e2c634b na liniji 50
INFO  04:09:05,565 - rs.etf.pp1.symboltable.concepts.Obj@6e2c634b na liniji 50
INFO  04:09:05,565 - rs.etf.pp1.symboltable.concepts.Obj@6e2c634b na liniji 50
INFO  04:09:05,565 - Postavljen formalni parametar z na liniji 50
INFO  04:09:05,565 - Postavljen formalni parametar d na liniji 50
INFO  04:09:05,565 - Poziv funkcije sum na liniji 50
INFO  04:09:05,565 - rs.etf.pp1.symboltable.concepts.Obj@6e2c634b na liniji 51
INFO  04:09:05,565 - Poziv funkcije verify na liniji 51
INFO  04:09:05,566 - Postavljen formalni parametar character na liniji 51
INFO  04:09:05,566 - Poziv funkcije ord na liniji 51
INFO  04:09:05,566 - Postavljen formalni parametar character na liniji 52
INFO  04:09:05,566 - Poziv funkcije ord na liniji 52
INFO  04:09:05,567 - Postavljen formalni parametar a na liniji 64
INFO  04:09:05,567 - Postavljen formalni parametar inc na liniji 64
INFO  04:09:05,567 - Poziv funkcije inkrement na liniji 64
INFO  04:09:05,569 - ForStm(
  NoForDesign(
  ) [NoForDesign]
  ForCond(
    SingleCondition(
      SingleFact(
        CondFact(
          NoMinus(
            TermExpr(
              TermFactor(
                FactorVar(
                  DesignatorName(
                   i
                  ) [DesignatorName]
                  NoFuncParens(
                  ) [NoFuncParens]
                ) [FactorVar]
              ) [TermFactor]
            ) [TermExpr]
          ) [NoMinus]
          RelExpression(
            Less(
            ) [Less]
            NoMinus(
              TermExpr(
                TermFactor(
                  ConstFactor(
                    FactNumConst(
                     10
                    ) [FactNumConst]
                  ) [ConstFactor]
                ) [TermFactor]
              ) [TermExpr]
            ) [NoMinus]
          ) [RelExpression]
        ) [CondFact]
      ) [SingleFact]
    ) [SingleCondition]
  ) [ForCond]
  NoForDesign(
  ) [NoForDesign]
  StatementInside(
    Statements(
      Statements(
        Statements(
          NoStmt(
          ) [NoStmt]
          IfStatementNotMatch(
            SingleCondition(
              SingleFact(
                CondFact(
                  NoMinus(
                    TermExpr(
                      TermFactor(
                        FactorVar(
                          DesignatorName(
                           i
                          ) [DesignatorName]
                          NoFuncParens(
                          ) [NoFuncParens]
                        ) [FactorVar]
                      ) [TermFactor]
                    ) [TermExpr]
                  ) [NoMinus]
                  RelExpression(
                    Equal(
                    ) [Equal]
                    NoMinus(
                      TermExpr(
                        TermFactor(
                          ConstFactor(
                            FactNumConst(
                             3
                            ) [FactNumConst]
                          ) [ConstFactor]
                        ) [TermFactor]
                      ) [TermExpr]
                    ) [NoMinus]
                  ) [RelExpression]
                ) [CondFact]
              ) [SingleFact]
            ) [SingleCondition]
            StatementInside(
              Statements(
                Statements(
                  NoStmt(
                  ) [NoStmt]
                  Assignment(
                    DesignInc(
                      DesignatorName(
                       i
                      ) [DesignatorName]
                    ) [DesignInc]
                  ) [Assignment]
                ) [Statements]
                ContinueSt(
                ) [ContinueSt]
              ) [Statements]
            ) [StatementInside]
          ) [IfStatementNotMatch]
        ) [Statements]
        IfStatementNotMatch(
          SingleCondition(
            SingleFact(
              CondFact(
                NoMinus(
                  TermExpr(
                    TermFactor(
                      FactorVar(
                        DesignatorName(
                         i
                        ) [DesignatorName]
                        NoFuncParens(
                        ) [NoFuncParens]
                      ) [FactorVar]
                    ) [TermFactor]
                  ) [TermExpr]
                ) [NoMinus]
                RelExpression(
                  Equal(
                  ) [Equal]
                  NoMinus(
                    TermExpr(
                      TermFactor(
                        ConstFactor(
                          FactNumConst(
                           4
                          ) [FactNumConst]
                        ) [ConstFactor]
                      ) [TermFactor]
                    ) [TermExpr]
                  ) [NoMinus]
                ) [RelExpression]
              ) [CondFact]
            ) [SingleFact]
          ) [SingleCondition]
          BreakSt(
          ) [BreakSt]
        ) [IfStatementNotMatch]
      ) [Statements]
      Assignment(
        DesignEqExpr(
          DesignatorName(
           i
          ) [DesignatorName]
          NoMinus(
            TermExpr(
              TermFactor(
                FactorVar(
                  DesignatorName(
                   inkrement
                  ) [DesignatorName]
                  FactorFuncParen(
                    Actuals(
                      ActualParams(
                        ActualParam(
                          NoMinus(
                            TermExpr(
                              TermFactor(
                                FactorVar(
                                  DesignatorName(
                                   i
                                  ) [DesignatorName]
                                  NoFuncParens(
                                  ) [NoFuncParens]
                                ) [FactorVar]
                              ) [TermFactor]
                            ) [TermExpr]
                          ) [NoMinus]
                        ) [ActualParam]
                        NoMinus(
                          TermExpr(
                            TermFactor(
                              ConstFactor(
                                FactNumConst(
                                 1
                                ) [FactNumConst]
                              ) [ConstFactor]
                            ) [TermFactor]
                          ) [TermExpr]
                        ) [NoMinus]
                      ) [ActualParams]
                    ) [Actuals]
                  ) [FactorFuncParen]
                ) [FactorVar]
              ) [TermFactor]
            ) [TermExpr]
          ) [NoMinus]
        ) [DesignEqExpr]
      ) [Assignment]
    ) [Statements]
  ) [StatementInside]
) [ForStm] na liniji 5
INFO  04:09:05,570 - Poziv funkcije verify na liniji 67
INFO  04:09:05,570 - rs.etf.pp1.symboltable.concepts.Obj@6e2c634b na liniji 70
INFO  04:09:05,570 - rs.etf.pp1.symboltable.concepts.Obj@6e2c634b na liniji 71
INFO  04:09:05,570 - rs.etf.pp1.symboltable.concepts.Obj@6e2c634b na liniji 72
INFO  04:09:05,570 - rs.etf.pp1.symboltable.concepts.Obj@6e2c634b na liniji 75
INFO  04:09:05,570 - rs.etf.pp1.symboltable.concepts.Obj@6e2c634b na liniji 75
INFO  04:09:05,570 - Postavljen formalni parametar z na liniji 75
INFO  04:09:05,571 - Postavljen formalni parametar d na liniji 75
INFO  04:09:05,571 - Poziv funkcije sum na liniji 75
INFO  04:09:05,571 - rs.etf.pp1.symboltable.concepts.Obj@6e2c634b na liniji 75
INFO  04:09:05,571 - Postavljen formalni parametar z na liniji 75
INFO  04:09:05,571 - Postavljen formalni parametar d na liniji 75
INFO  04:09:05,571 - Poziv funkcije sum na liniji 75
INFO  04:09:05,571 - rs.etf.pp1.symboltable.concepts.Obj@6e2c634b na liniji 78
INFO  04:09:05,571 - Postavljen formalni parametar a na liniji 78
INFO  04:09:05,571 - Postavljen formalni parametar inc na liniji 78
INFO  04:09:05,571 - Poziv funkcije inkrement na liniji 78
INFO  04:09:05,572 - Print calls = 14
INFO  04:09:05,572 - Read calls = 3
INFO  04:09:05,572 - Broj promenljivih = 3
INFO  04:09:05,572 - Broj nizova = 1
INFO  04:09:05,573 - Broj konstanti = 1
INFO  04:09:05,574 - Generating bytecode file: D:\Faks\4.godina\pp\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.obj
INFO  04:09:05,596 - Parsiranje uspesno zavrseno!
