INFO  17:26:34,410 - Compiling source file: D:\Faks\4.godina\pp\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  17:26:34,559 - #2 program
INFO  17:26:34,560 - #17 test302
INFO  17:26:34,560 - #24 const
INFO  17:26:34,564 - #17 int
INFO  17:26:34,565 - #17 jedan
INFO  17:26:34,566 - #13 =
INFO  17:26:34,567 - #16 1
INFO  17:26:34,567 - #5 ;
INFO  17:26:34,569 - #17 int
INFO  17:26:34,572 - #17 i
INFO  17:26:34,572 - #8 ,
INFO  17:26:34,576 - #17 t
INFO  17:26:34,576 - #5 ;
INFO  17:26:34,577 - #17 bool
INFO  17:26:34,578 - #17 ibool
INFO  17:26:34,578 - #5 ;
INFO  17:26:34,579 - #17 int
INFO  17:26:34,579 - #17 niz
INFO  17:26:34,579 - #25 [
INFO  17:26:34,581 - #26 ]
INFO  17:26:34,581 - #5 ;
INFO  17:26:34,582 - #3 {
INFO  17:26:34,583 - #17 int
INFO  17:26:34,586 - #17 sum
INFO  17:26:34,587 - #6 (
INFO  17:26:34,589 - #17 int
INFO  17:26:34,589 - #17 z
INFO  17:26:34,589 - #8 ,
INFO  17:26:34,593 - #17 int
INFO  17:26:34,593 - #17 d
INFO  17:26:34,594 - #7 )
INFO  17:26:34,595 - #3 {
INFO  17:26:34,599 - #10 return
INFO  17:26:34,600 - #17 z
INFO  17:26:34,600 - #11 +
INFO  17:26:34,602 - #17 d
INFO  17:26:34,605 - #5 ;
INFO  17:26:34,606 - #4 }
INFO  17:26:34,606 - #17 int
INFO  17:26:34,608 - #17 inkrement
INFO  17:26:34,608 - #6 (
INFO  17:26:34,609 - #17 int
INFO  17:26:34,609 - #17 a
INFO  17:26:34,609 - #8 ,
INFO  17:26:34,609 - #17 int
INFO  17:26:34,609 - #17 inc
INFO  17:26:34,610 - #7 )
INFO  17:26:34,610 - #17 int
INFO  17:26:34,610 - #17 pom
INFO  17:26:34,610 - #5 ;
INFO  17:26:34,610 - #3 {
INFO  17:26:34,612 - #18 if
INFO  17:26:34,612 - #6 (
INFO  17:26:34,613 - #17 inc
INFO  17:26:34,613 - #32 ==
INFO  17:26:34,613 - #17 jedan
INFO  17:26:34,615 - #7 )
INFO  17:26:34,618 - #17 pom
INFO  17:26:34,619 - #13 =
INFO  17:26:34,635 - #16 1
INFO  17:26:34,637 - #5 ;
INFO  17:26:34,638 - #19 else
INFO  17:26:34,638 - #18 if
INFO  17:26:34,640 - #6 (
INFO  17:26:34,640 - #17 inc
INFO  17:26:34,640 - #32 ==
INFO  17:26:34,640 - #16 2
INFO  17:26:34,640 - #7 )
INFO  17:26:34,641 - #17 pom
INFO  17:26:34,641 - #13 =
INFO  17:26:34,641 - #17 a
INFO  17:26:34,641 - #5 ;
INFO  17:26:34,642 - #10 return
INFO  17:26:34,642 - #17 sum
INFO  17:26:34,642 - #6 (
INFO  17:26:34,642 - #17 a
INFO  17:26:34,642 - #8 ,
INFO  17:26:34,643 - #17 pom
INFO  17:26:34,643 - #7 )
INFO  17:26:34,643 - #5 ;
INFO  17:26:34,643 - #4 }
INFO  17:26:34,643 - #17 bool
INFO  17:26:34,643 - #17 verify
INFO  17:26:34,644 - #6 (
INFO  17:26:34,644 - #7 )
INFO  17:26:34,647 - #3 {
INFO  17:26:34,647 - #9 print
INFO  17:26:34,648 - #6 (
INFO  17:26:34,649 - #22 v
INFO  17:26:34,649 - #7 )
INFO  17:26:34,650 - #5 ;
INFO  17:26:34,650 - #10 return
INFO  17:26:34,651 - #23 false
INFO  17:26:34,651 - #5 ;
INFO  17:26:34,651 - #4 }
INFO  17:26:34,651 - #14 void
INFO  17:26:34,651 - #17 main
INFO  17:26:34,652 - #6 (
INFO  17:26:34,652 - #7 )
INFO  17:26:34,653 - #3 {
INFO  17:26:34,653 - #17 ibool
INFO  17:26:34,653 - #13 =
INFO  17:26:34,653 - #23 false
INFO  17:26:34,653 - #5 ;
INFO  17:26:34,653 - #4 }
INFO  17:26:34,653 - #4 }
INFO  17:26:34,690 - Program(
  ProgName(
   test302
  ) [ProgName]
  DeclarationsVarsConsts(
    DeclarationsVarsConsts(
      DeclarationsVarsConsts(
        DeclarationsVarsConsts(
          NoDecl(
          ) [NoDecl]
          DeclConsts(
            ConstDecl(
              Type(
               int
              ) [Type]
              SingleConst(
                ConstIdent(
                 jedan
                  NumConst(
                   1
                  ) [NumConst]
                ) [ConstIdent]
              ) [SingleConst]
            ) [ConstDecl]
          ) [DeclConsts]
        ) [DeclarationsVarsConsts]
        DeclVars(
          VarDecl(
            Type(
             int
            ) [Type]
            VarIdents(
              SingleIdent(
                VarIdent(
                 i
                  NoVarSquares(
                  ) [NoVarSquares]
                ) [VarIdent]
              ) [SingleIdent]
              VarIdent(
               t
                NoVarSquares(
                ) [NoVarSquares]
              ) [VarIdent]
            ) [VarIdents]
          ) [VarDecl]
        ) [DeclVars]
      ) [DeclarationsVarsConsts]
      DeclVars(
        VarDecl(
          Type(
           bool
          ) [Type]
          SingleIdent(
            VarIdent(
             ibool
              NoVarSquares(
              ) [NoVarSquares]
            ) [VarIdent]
          ) [SingleIdent]
        ) [VarDecl]
      ) [DeclVars]
    ) [DeclarationsVarsConsts]
    DeclVars(
      VarDecl(
        Type(
         int
        ) [Type]
        SingleIdent(
          VarIdent(
           niz
            VarSquare(
            ) [VarSquare]
          ) [VarIdent]
        ) [SingleIdent]
      ) [VarDecl]
    ) [DeclVars]
  ) [DeclarationsVarsConsts]
  MethodDeclarations(
    MethodDeclarations(
      MethodDeclarations(
        MethodDeclarations(
          NoMethodDecl(
          ) [NoMethodDecl]
          MethodDecl(
            MethodTypeName(
              ReturnTypes(
                Type(
                 int
                ) [Type]
              ) [ReturnTypes]
             sum
            ) [MethodTypeName]
            FormParamss(
              FormalParamLists(
                SingleFormalParamDecl(
                  FormalParamDecl(
                    Type(
                     int
                    ) [Type]
                   z
                    NoSquares(
                    ) [NoSquares]
                  ) [FormalParamDecl]
                ) [SingleFormalParamDecl]
                FormalParamDecl(
                  Type(
                   int
                  ) [Type]
                 d
                  NoSquares(
                  ) [NoSquares]
                ) [FormalParamDecl]
              ) [FormalParamLists]
            ) [FormParamss]
            NoVarDecl(
            ) [NoVarDecl]
            Statements(
              NoStmt(
              ) [NoStmt]
              ReturnExpr(
                AddExpr(
                  TermExpr(
                    TermFactor(
                      FactorVar(
                        DesignatorName(
                         z
                        ) [DesignatorName]
                        NoFuncParens(
                        ) [NoFuncParens]
                      ) [FactorVar]
                    ) [TermFactor]
                  ) [TermExpr]
                  AddLeft(
                    Add(
                    ) [Add]
                  ) [AddLeft]
                  TermFactor(
                    FactorVar(
                      DesignatorName(
                       d
                      ) [DesignatorName]
                      NoFuncParens(
                      ) [NoFuncParens]
                    ) [FactorVar]
                  ) [TermFactor]
                ) [AddExpr]
              ) [ReturnExpr]
            ) [Statements]
          ) [MethodDecl]
        ) [MethodDeclarations]
        MethodDecl(
          MethodTypeName(
            ReturnTypes(
              Type(
               int
              ) [Type]
            ) [ReturnTypes]
           inkrement
          ) [MethodTypeName]
          FormParamss(
            FormalParamLists(
              SingleFormalParamDecl(
                FormalParamDecl(
                  Type(
                   int
                  ) [Type]
                 a
                  NoSquares(
                  ) [NoSquares]
                ) [FormalParamDecl]
              ) [SingleFormalParamDecl]
              FormalParamDecl(
                Type(
                 int
                ) [Type]
               inc
                NoSquares(
                ) [NoSquares]
              ) [FormalParamDecl]
            ) [FormalParamLists]
          ) [FormParamss]
          VarDeclarations(
            NoVarDecl(
            ) [NoVarDecl]
            VarDecl(
              Type(
               int
              ) [Type]
              SingleIdent(
                VarIdent(
                 pom
                  NoVarSquares(
                  ) [NoVarSquares]
                ) [VarIdent]
              ) [SingleIdent]
            ) [VarDecl]
          ) [VarDeclarations]
          Statements(
            Statements(
              NoStmt(
              ) [NoStmt]
              IfStatementMatch(
                SingleCondition(
                  SingleFact(
                    CondFact(
                      TermExpr(
                        TermFactor(
                          FactorVar(
                            DesignatorName(
                             inc
                            ) [DesignatorName]
                            NoFuncParens(
                            ) [NoFuncParens]
                          ) [FactorVar]
                        ) [TermFactor]
                      ) [TermExpr]
                      RelExpression(
                        Equal(
                        ) [Equal]
                        TermExpr(
                          TermFactor(
                            FactorVar(
                              DesignatorName(
                               jedan
                              ) [DesignatorName]
                              NoFuncParens(
                              ) [NoFuncParens]
                            ) [FactorVar]
                          ) [TermFactor]
                        ) [TermExpr]
                      ) [RelExpression]
                    ) [CondFact]
                  ) [SingleFact]
                ) [SingleCondition]
                DesStatementClass(
                  DesignEqExpr(
                    DesignatorName(
                     pom
                    ) [DesignatorName]
                    AssEq(
                    ) [AssEq]
                    TermExpr(
                      TermFactor(
                        ConstFactor(
                          FactNumConst(
                           1
                          ) [FactNumConst]
                        ) [ConstFactor]
                      ) [TermFactor]
                    ) [TermExpr]
                  ) [DesignEqExpr]
                ) [DesStatementClass]
                Else(
                ) [Else]
                IfStatementNotMatch(
                  SingleCondition(
                    SingleFact(
                      CondFact(
                        TermExpr(
                          TermFactor(
                            FactorVar(
                              DesignatorName(
                               inc
                              ) [DesignatorName]
                              NoFuncParens(
                              ) [NoFuncParens]
                            ) [FactorVar]
                          ) [TermFactor]
                        ) [TermExpr]
                        RelExpression(
                          Equal(
                          ) [Equal]
                          TermExpr(
                            TermFactor(
                              ConstFactor(
                                FactNumConst(
                                 2
                                ) [FactNumConst]
                              ) [ConstFactor]
                            ) [TermFactor]
                          ) [TermExpr]
                        ) [RelExpression]
                      ) [CondFact]
                    ) [SingleFact]
                  ) [SingleCondition]
                  DesStatementClass(
                    DesignEqExpr(
                      DesignatorName(
                       pom
                      ) [DesignatorName]
                      AssEq(
                      ) [AssEq]
                      TermExpr(
                        TermFactor(
                          FactorVar(
                            DesignatorName(
                             a
                            ) [DesignatorName]
                            NoFuncParens(
                            ) [NoFuncParens]
                          ) [FactorVar]
                        ) [TermFactor]
                      ) [TermExpr]
                    ) [DesignEqExpr]
                  ) [DesStatementClass]
                ) [IfStatementNotMatch]
              ) [IfStatementMatch]
            ) [Statements]
            ReturnExpr(
              TermExpr(
                TermFactor(
                  FactorVar(
                    DesignatorName(
                     sum
                    ) [DesignatorName]
                    FactorFuncParen(
                      Actuals(
                        ActualParams(
                          ActualParam(
                            TermExpr(
                              TermFactor(
                                FactorVar(
                                  DesignatorName(
                                   a
                                  ) [DesignatorName]
                                  NoFuncParens(
                                  ) [NoFuncParens]
                                ) [FactorVar]
                              ) [TermFactor]
                            ) [TermExpr]
                          ) [ActualParam]
                          TermExpr(
                            TermFactor(
                              FactorVar(
                                DesignatorName(
                                 pom
                                ) [DesignatorName]
                                NoFuncParens(
                                ) [NoFuncParens]
                              ) [FactorVar]
                            ) [TermFactor]
                          ) [TermExpr]
                        ) [ActualParams]
                      ) [Actuals]
                    ) [FactorFuncParen]
                  ) [FactorVar]
                ) [TermFactor]
              ) [TermExpr]
            ) [ReturnExpr]
          ) [Statements]
        ) [MethodDecl]
      ) [MethodDeclarations]
      MethodDecl(
        MethodTypeName(
          ReturnTypes(
            Type(
             bool
            ) [Type]
          ) [ReturnTypes]
         verify
        ) [MethodTypeName]
        NoFormParam(
        ) [NoFormParam]
        NoVarDecl(
        ) [NoVarDecl]
        Statements(
          Statements(
            NoStmt(
            ) [NoStmt]
            PrintStmt(
              TermExpr(
                TermFactor(
                  ConstFactor(
                    FactCharConst(
                     v
                    ) [FactCharConst]
                  ) [ConstFactor]
                ) [TermFactor]
              ) [TermExpr]
              DontPrintNum(
              ) [DontPrintNum]
            ) [PrintStmt]
          ) [Statements]
          ReturnExpr(
            TermExpr(
              TermFactor(
                ConstFactor(
                  FactBoolConst(
                   false
                  ) [FactBoolConst]
                ) [ConstFactor]
              ) [TermFactor]
            ) [TermExpr]
          ) [ReturnExpr]
        ) [Statements]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      MethodTypeName(
        VoidType(
        ) [VoidType]
       main
      ) [MethodTypeName]
      NoFormParam(
      ) [NoFormParam]
      NoVarDecl(
      ) [NoVarDecl]
      Statements(
        NoStmt(
        ) [NoStmt]
        DesStatementClass(
          DesignEqExpr(
            DesignatorName(
             ibool
            ) [DesignatorName]
            AssEq(
            ) [AssEq]
            TermExpr(
              TermFactor(
                ConstFactor(
                  FactBoolConst(
                   false
                  ) [FactBoolConst]
                ) [ConstFactor]
              ) [TermFactor]
            ) [TermExpr]
          ) [DesignEqExpr]
        ) [DesStatementClass]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  17:26:34,692 - ===================================
INFO  17:26:34,702 - Deklarisana konstanta jedan i ima vrednost 1 na liniji 5
INFO  17:26:34,702 - Deklarisana promenljiva i na liniji 7
INFO  17:26:34,702 - Deklarisana promenljiva t na liniji 7
INFO  17:26:34,702 - Deklarisana promenljiva ibool na liniji 8
INFO  17:26:34,702 - Deklarisan niz niz na liniji 10
INFO  17:26:34,703 - Obradjuje se funkcija sum na liniji 13
INFO  17:26:34,703 - Deklarisan parametar z na liniji 13
INFO  17:26:34,703 - Deklarisan parametar d na liniji 13
INFO  17:26:34,703 - Koriscenje formalnog parametra  na liniji 15
INFO  17:26:34,703 - DesignatorName(
 z
) [DesignatorName] na liniji 15
INFO  17:26:34,704 - Koriscenje formalnog parametra  na liniji 15
INFO  17:26:34,704 - DesignatorName(
 d
) [DesignatorName] na liniji 15
INFO  17:26:34,704 - Funkcija sum uspesno definisana na liniji 15
INFO  17:26:34,704 - Obradjuje se funkcija inkrement na liniji 18
INFO  17:26:34,704 - Deklarisan parametar a na liniji 18
INFO  17:26:34,704 - Deklarisan parametar inc na liniji 18
INFO  17:26:34,705 - Deklarisana promenljiva pom na liniji 18
INFO  17:26:34,705 - Koriscenje formalnog parametra  na liniji 20
INFO  17:26:34,705 - DesignatorName(
 inc
) [DesignatorName] na liniji 20
INFO  17:26:34,706 - Koriscenje konstante  na liniji 20
INFO  17:26:34,706 - DesignatorName(
 jedan
) [DesignatorName] na liniji 20
INFO  17:26:34,706 - Koriscenje promenljive  na liniji 20
INFO  17:26:34,706 - DesignatorName(
 pom
) [DesignatorName] na liniji 20
INFO  17:26:34,707 - Koriscenje formalnog parametra  na liniji 21
INFO  17:26:34,707 - DesignatorName(
 inc
) [DesignatorName] na liniji 21
INFO  17:26:34,707 - Koriscenje promenljive  na liniji 21
INFO  17:26:34,707 - DesignatorName(
 pom
) [DesignatorName] na liniji 21
INFO  17:26:34,707 - Koriscenje formalnog parametra  na liniji 21
INFO  17:26:34,707 - DesignatorName(
 a
) [DesignatorName] na liniji 21
INFO  17:26:34,707 - DesignatorName(
 sum
) [DesignatorName] na liniji 23
INFO  17:26:34,707 - Koriscenje formalnog parametra  na liniji 23
INFO  17:26:34,708 - DesignatorName(
 a
) [DesignatorName] na liniji 23
INFO  17:26:34,708 - Koriscenje promenljive  na liniji 23
INFO  17:26:34,708 - DesignatorName(
 pom
) [DesignatorName] na liniji 23
INFO  17:26:34,709 - Postavljen formalni parametar z na liniji 23
INFO  17:26:34,709 - Postavljen formalni parametar d na liniji 23
INFO  17:26:34,709 - Poziv funkcije sum na liniji 23
INFO  17:26:34,709 - FactorVar(
  DesignatorName(
   sum
  ) [DesignatorName]
  FactorFuncParen(
    Actuals(
      ActualParams(
        ActualParam(
          TermExpr(
            TermFactor(
              FactorVar(
                DesignatorName(
                 a
                ) [DesignatorName]
                NoFuncParens(
                ) [NoFuncParens]
              ) [FactorVar]
            ) [TermFactor]
          ) [TermExpr]
        ) [ActualParam]
        TermExpr(
          TermFactor(
            FactorVar(
              DesignatorName(
               pom
              ) [DesignatorName]
              NoFuncParens(
              ) [NoFuncParens]
            ) [FactorVar]
          ) [TermFactor]
        ) [TermExpr]
      ) [ActualParams]
    ) [Actuals]
  ) [FactorFuncParen]
) [FactorVar] na liniji 23
INFO  17:26:34,709 - Funkcija inkrement uspesno definisana na liniji 23
INFO  17:26:34,709 - Obradjuje se funkcija verify na liniji 26
INFO  17:26:34,710 - Funkcija verify uspesno definisana na liniji 28
INFO  17:26:34,710 - Obradjuje se funkcija main na liniji 31
INFO  17:26:34,710 - Koriscenje promenljive  na liniji 35
INFO  17:26:34,710 - DesignatorName(
 ibool
) [DesignatorName] na liniji 35
INFO  17:26:34,710 - Print calls = 1
INFO  17:26:34,710 - Read calls = 0
INFO  17:26:34,710 - Broj promenljivih = 4
INFO  17:26:34,710 - Broj nizova = 1
INFO  17:26:34,710 - Broj konstanti = 0
INFO  17:26:34,712 - Generating bytecode file: D:\Faks\4.godina\pp\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.obj
INFO  17:26:34,726 - Parsiranje uspesno zavrseno!
