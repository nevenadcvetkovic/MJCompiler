INFO  03:54:55,164 - Compiling source file: D:\Faks\4.godina\pp\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  03:54:55,241 - #2 program
INFO  03:54:55,241 - #15 test302
INFO  03:54:55,241 - #21 const
INFO  03:54:55,244 - #15 int
INFO  03:54:55,244 - #15 jedan
INFO  03:54:55,245 - #12 =
INFO  03:54:55,246 - #14 1
INFO  03:54:55,246 - #5 ;
INFO  03:54:55,247 - #15 int
INFO  03:54:55,249 - #15 i
INFO  03:54:55,250 - #5 ;
INFO  03:54:55,253 - #15 bool
INFO  03:54:55,255 - #15 ibool
INFO  03:54:55,255 - #5 ;
INFO  03:54:55,255 - #15 int
INFO  03:54:55,255 - #15 niz
INFO  03:54:55,257 - #22 [
INFO  03:54:55,258 - #23 ]
INFO  03:54:55,258 - #5 ;
INFO  03:54:55,259 - #3 {
INFO  03:54:55,260 - #15 int
INFO  03:54:55,261 - #15 sum
INFO  03:54:55,261 - #6 (
INFO  03:54:55,262 - #15 int
INFO  03:54:55,262 - #15 z
INFO  03:54:55,263 - #8 ,
INFO  03:54:55,265 - #15 int
INFO  03:54:55,265 - #15 d
INFO  03:54:55,265 - #7 )
INFO  03:54:55,266 - #3 {
INFO  03:54:55,267 - #10 return
INFO  03:54:55,268 - #15 z
INFO  03:54:55,268 - #11 +
INFO  03:54:55,270 - #15 d
INFO  03:54:55,272 - #5 ;
INFO  03:54:55,272 - #4 }
INFO  03:54:55,273 - #15 int
INFO  03:54:55,275 - #15 inkrement
INFO  03:54:55,275 - #6 (
INFO  03:54:55,275 - #15 int
INFO  03:54:55,275 - #15 a
INFO  03:54:55,275 - #8 ,
INFO  03:54:55,275 - #15 int
INFO  03:54:55,275 - #15 inc
INFO  03:54:55,276 - #7 )
INFO  03:54:55,276 - #15 int
INFO  03:54:55,276 - #15 pom
INFO  03:54:55,276 - #5 ;
INFO  03:54:55,276 - #3 {
INFO  03:54:55,277 - #16 if
INFO  03:54:55,277 - #6 (
INFO  03:54:55,277 - #15 inc
INFO  03:54:55,277 - #29 ==
INFO  03:54:55,277 - #15 jedan
INFO  03:54:55,279 - #7 )
INFO  03:54:55,281 - #15 pom
INFO  03:54:55,281 - #12 =
INFO  03:54:55,281 - #14 1
INFO  03:54:55,281 - #5 ;
INFO  03:54:55,289 - #17 else
INFO  03:54:55,289 - #16 if
INFO  03:54:55,289 - #6 (
INFO  03:54:55,289 - #15 inc
INFO  03:54:55,290 - #29 ==
INFO  03:54:55,290 - #14 2
INFO  03:54:55,290 - #7 )
INFO  03:54:55,290 - #15 pom
INFO  03:54:55,290 - #12 =
INFO  03:54:55,290 - #15 a
INFO  03:54:55,291 - #5 ;
INFO  03:54:55,291 - #10 return
INFO  03:54:55,291 - #15 sum
INFO  03:54:55,292 - #6 (
INFO  03:54:55,292 - #15 a
INFO  03:54:55,292 - #8 ,
INFO  03:54:55,292 - #15 pom
INFO  03:54:55,292 - #7 )
INFO  03:54:55,293 - #5 ;
INFO  03:54:55,293 - #4 }
INFO  03:54:55,294 - #15 bool
INFO  03:54:55,294 - #15 verify
INFO  03:54:55,294 - #6 (
INFO  03:54:55,294 - #7 )
INFO  03:54:55,295 - #3 {
INFO  03:54:55,295 - #9 print
INFO  03:54:55,296 - #6 (
INFO  03:54:55,296 - #19 v
INFO  03:54:55,296 - #7 )
INFO  03:54:55,297 - #5 ;
INFO  03:54:55,298 - #10 return
INFO  03:54:55,298 - #20 false
INFO  03:54:55,298 - #5 ;
INFO  03:54:55,299 - #4 }
INFO  03:54:55,299 - #13 void
INFO  03:54:55,299 - #15 main
INFO  03:54:55,300 - #6 (
INFO  03:54:55,301 - #7 )
INFO  03:54:55,301 - #3 {
INFO  03:54:55,301 - #16 if
INFO  03:54:55,301 - #6 (
INFO  03:54:55,301 - #14 1
INFO  03:54:55,301 - #30 !=
INFO  03:54:55,302 - #14 1
INFO  03:54:55,303 - #7 )
INFO  03:54:55,303 - #9 print
INFO  03:54:55,303 - #6 (
INFO  03:54:55,303 - #37 -
INFO  03:54:55,303 - #14 6
INFO  03:54:55,303 - #7 )
INFO  03:54:55,304 - #5 ;
INFO  03:54:55,304 - #17 else
INFO  03:54:55,304 - #9 print
INFO  03:54:55,304 - #6 (
INFO  03:54:55,304 - #14 0
INFO  03:54:55,304 - #7 )
INFO  03:54:55,304 - #5 ;
INFO  03:54:55,304 - #15 ibool
INFO  03:54:55,305 - #12 =
INFO  03:54:55,305 - #20 false
INFO  03:54:55,305 - #5 ;
INFO  03:54:55,305 - #15 i
INFO  03:54:55,305 - #12 =
INFO  03:54:55,305 - #14 0
INFO  03:54:55,305 - #5 ;
INFO  03:54:55,305 - #18 for
INFO  03:54:55,305 - #6 (
INFO  03:54:55,306 - #15 i
INFO  03:54:55,306 - #12 =
INFO  03:54:55,306 - #14 0
INFO  03:54:55,306 - #5 ;
INFO  03:54:55,306 - #15 i
INFO  03:54:55,307 - #33 <
INFO  03:54:55,307 - #14 5
INFO  03:54:55,308 - #5 ;
INFO  03:54:55,309 - #15 i
INFO  03:54:55,309 - #27 ++
INFO  03:54:55,309 - #7 )
INFO  03:54:55,309 - #3 {
INFO  03:54:55,309 - #16 if
INFO  03:54:55,310 - #6 (
INFO  03:54:55,310 - #15 i
INFO  03:54:55,310 - #29 ==
INFO  03:54:55,310 - #14 2
INFO  03:54:55,310 - #7 )
INFO  03:54:55,310 - #15 ibool
INFO  03:54:55,310 - #12 =
INFO  03:54:55,310 - #20 true
INFO  03:54:55,311 - #5 ;
INFO  03:54:55,311 - #4 }
INFO  03:54:55,311 - #16 if
INFO  03:54:55,311 - #6 (
INFO  03:54:55,312 - #15 ibool
INFO  03:54:55,312 - #7 )
INFO  03:54:55,312 - #16 if
INFO  03:54:55,312 - #6 (
INFO  03:54:55,313 - #15 i
INFO  03:54:55,313 - #29 ==
INFO  03:54:55,313 - #14 5
INFO  03:54:55,313 - #7 )
INFO  03:54:55,313 - #9 print
INFO  03:54:55,313 - #6 (
INFO  03:54:55,313 - #14 1
INFO  03:54:55,313 - #7 )
INFO  03:54:55,314 - #5 ;
INFO  03:54:55,314 - #17 else
INFO  03:54:55,314 - #9 print
INFO  03:54:55,314 - #6 (
INFO  03:54:55,314 - #37 -
INFO  03:54:55,314 - #14 1
INFO  03:54:55,314 - #7 )
INFO  03:54:55,314 - #5 ;
INFO  03:54:55,314 - #15 niz
INFO  03:54:55,315 - #12 =
INFO  03:54:55,315 - #41 new
INFO  03:54:55,315 - #15 int
INFO  03:54:55,315 - #22 [
INFO  03:54:55,315 - #14 3
INFO  03:54:55,315 - #23 ]
INFO  03:54:55,315 - #5 ;
INFO  03:54:55,316 - #15 niz
INFO  03:54:55,316 - #22 [
INFO  03:54:55,316 - #14 0
INFO  03:54:55,316 - #23 ]
INFO  03:54:55,316 - #12 =
INFO  03:54:55,317 - #14 1
INFO  03:54:55,317 - #5 ;
INFO  03:54:55,317 - #15 niz
INFO  03:54:55,317 - #22 [
INFO  03:54:55,317 - #14 1
INFO  03:54:55,317 - #23 ]
INFO  03:54:55,317 - #12 =
INFO  03:54:55,317 - #14 2
INFO  03:54:55,317 - #5 ;
INFO  03:54:55,317 - #15 niz
INFO  03:54:55,318 - #22 [
INFO  03:54:55,318 - #14 2
INFO  03:54:55,318 - #23 ]
INFO  03:54:55,318 - #12 =
INFO  03:54:55,318 - #15 sum
INFO  03:54:55,318 - #6 (
INFO  03:54:55,318 - #15 niz
INFO  03:54:55,318 - #22 [
INFO  03:54:55,318 - #14 1
INFO  03:54:55,318 - #23 ]
INFO  03:54:55,318 - #8 ,
INFO  03:54:55,319 - #15 niz
INFO  03:54:55,319 - #22 [
INFO  03:54:55,319 - #14 0
INFO  03:54:55,319 - #23 ]
INFO  03:54:55,319 - #7 )
INFO  03:54:55,319 - #11 +
INFO  03:54:55,319 - #14 1
INFO  03:54:55,319 - #5 ;
INFO  03:54:55,320 - #16 if
INFO  03:54:55,320 - #6 (
INFO  03:54:55,320 - #15 niz
INFO  03:54:55,320 - #22 [
INFO  03:54:55,320 - #14 2
INFO  03:54:55,320 - #23 ]
INFO  03:54:55,320 - #29 ==
INFO  03:54:55,320 - #14 4
INFO  03:54:55,320 - #35 ||
INFO  03:54:55,320 - #15 verify
INFO  03:54:55,320 - #6 (
INFO  03:54:55,320 - #7 )
INFO  03:54:55,325 - #7 )
INFO  03:54:55,326 - #9 print
INFO  03:54:55,326 - #6 (
INFO  03:54:55,326 - #15 ord
INFO  03:54:55,326 - #6 (
INFO  03:54:55,326 - #19 A
INFO  03:54:55,326 - #7 )
INFO  03:54:55,326 - #7 )
INFO  03:54:55,326 - #5 ;
INFO  03:54:55,327 - #17 else
INFO  03:54:55,327 - #9 print
INFO  03:54:55,327 - #6 (
INFO  03:54:55,327 - #15 ord
INFO  03:54:55,327 - #6 (
INFO  03:54:55,327 - #19 a
INFO  03:54:55,327 - #7 )
INFO  03:54:55,328 - #7 )
INFO  03:54:55,328 - #5 ;
INFO  03:54:55,328 - #9 print
INFO  03:54:55,328 - #6 (
INFO  03:54:55,329 - #15 eol
INFO  03:54:55,329 - #7 )
INFO  03:54:55,329 - #5 ;
INFO  03:54:55,329 - #15 i
INFO  03:54:55,329 - #12 =
INFO  03:54:55,329 - #14 0
INFO  03:54:55,329 - #5 ;
INFO  03:54:55,330 - #18 for
INFO  03:54:55,330 - #6 (
INFO  03:54:55,330 - #5 ;
INFO  03:54:55,332 - #15 i
INFO  03:54:55,332 - #33 <
INFO  03:54:55,332 - #14 10
INFO  03:54:55,332 - #5 ;
INFO  03:54:55,332 - #7 )
INFO  03:54:55,332 - #3 {
INFO  03:54:55,332 - #16 if
INFO  03:54:55,332 - #6 (
INFO  03:54:55,332 - #15 i
INFO  03:54:55,333 - #29 ==
INFO  03:54:55,333 - #14 3
INFO  03:54:55,333 - #7 )
INFO  03:54:55,333 - #3 {
INFO  03:54:55,333 - #15 i
INFO  03:54:55,333 - #27 ++
INFO  03:54:55,333 - #5 ;
INFO  03:54:55,333 - #26 continue
INFO  03:54:55,334 - #5 ;
INFO  03:54:55,334 - #4 }
INFO  03:54:55,335 - #16 if
INFO  03:54:55,335 - #6 (
INFO  03:54:55,335 - #15 i
INFO  03:54:55,335 - #29 ==
INFO  03:54:55,335 - #14 4
INFO  03:54:55,335 - #7 )
INFO  03:54:55,335 - #25 break
INFO  03:54:55,336 - #5 ;
INFO  03:54:55,336 - #15 i
INFO  03:54:55,336 - #12 =
INFO  03:54:55,337 - #15 inkrement
INFO  03:54:55,337 - #6 (
INFO  03:54:55,337 - #15 i
INFO  03:54:55,337 - #8 ,
INFO  03:54:55,337 - #14 1
INFO  03:54:55,337 - #7 )
INFO  03:54:55,337 - #5 ;
INFO  03:54:55,337 - #4 }
INFO  03:54:55,338 - #16 if
INFO  03:54:55,338 - #6 (
INFO  03:54:55,338 - #15 i
INFO  03:54:55,338 - #29 ==
INFO  03:54:55,338 - #14 3
INFO  03:54:55,338 - #36 &&
INFO  03:54:55,338 - #15 verify
INFO  03:54:55,338 - #6 (
INFO  03:54:55,338 - #7 )
INFO  03:54:55,339 - #7 )
INFO  03:54:55,339 - #9 print
INFO  03:54:55,339 - #6 (
INFO  03:54:55,339 - #14 4
INFO  03:54:55,339 - #7 )
INFO  03:54:55,339 - #5 ;
INFO  03:54:55,339 - #17 else
INFO  03:54:55,339 - #9 print
INFO  03:54:55,340 - #6 (
INFO  03:54:55,340 - #37 -
INFO  03:54:55,340 - #14 4
INFO  03:54:55,340 - #7 )
INFO  03:54:55,340 - #5 ;
INFO  03:54:55,340 - #24 read
INFO  03:54:55,340 - #6 (
INFO  03:54:55,340 - #15 niz
INFO  03:54:55,340 - #22 [
INFO  03:54:55,340 - #14 0
INFO  03:54:55,340 - #23 ]
INFO  03:54:55,341 - #7 )
INFO  03:54:55,341 - #5 ;
INFO  03:54:55,341 - #24 read
INFO  03:54:55,341 - #6 (
INFO  03:54:55,341 - #15 niz
INFO  03:54:55,341 - #22 [
INFO  03:54:55,341 - #14 1
INFO  03:54:55,341 - #23 ]
INFO  03:54:55,341 - #7 )
INFO  03:54:55,342 - #5 ;
INFO  03:54:55,342 - #24 read
INFO  03:54:55,342 - #6 (
INFO  03:54:55,342 - #15 niz
INFO  03:54:55,342 - #22 [
INFO  03:54:55,342 - #14 2
INFO  03:54:55,342 - #23 ]
INFO  03:54:55,342 - #7 )
INFO  03:54:55,342 - #5 ;
INFO  03:54:55,342 - #9 print
INFO  03:54:55,343 - #6 (
INFO  03:54:55,343 - #15 eol
INFO  03:54:55,343 - #7 )
INFO  03:54:55,343 - #5 ;
INFO  03:54:55,343 - #9 print
INFO  03:54:55,343 - #6 (
INFO  03:54:55,343 - #15 sum
INFO  03:54:55,343 - #6 (
INFO  03:54:55,343 - #15 sum
INFO  03:54:55,343 - #6 (
INFO  03:54:55,343 - #15 niz
INFO  03:54:55,344 - #22 [
INFO  03:54:55,344 - #14 0
INFO  03:54:55,344 - #23 ]
INFO  03:54:55,344 - #8 ,
INFO  03:54:55,344 - #15 niz
INFO  03:54:55,344 - #22 [
INFO  03:54:55,344 - #14 1
INFO  03:54:55,344 - #23 ]
INFO  03:54:55,344 - #7 )
INFO  03:54:55,345 - #8 ,
INFO  03:54:55,345 - #15 niz
INFO  03:54:55,345 - #22 [
INFO  03:54:55,345 - #14 2
INFO  03:54:55,345 - #23 ]
INFO  03:54:55,345 - #7 )
INFO  03:54:55,345 - #7 )
INFO  03:54:55,345 - #5 ;
INFO  03:54:55,345 - #9 print
INFO  03:54:55,345 - #6 (
INFO  03:54:55,346 - #15 eol
INFO  03:54:55,346 - #7 )
INFO  03:54:55,346 - #5 ;
INFO  03:54:55,346 - #9 print
INFO  03:54:55,346 - #6 (
INFO  03:54:55,346 - #15 inkrement
INFO  03:54:55,346 - #6 (
INFO  03:54:55,346 - #15 niz
INFO  03:54:55,346 - #22 [
INFO  03:54:55,346 - #14 2
INFO  03:54:55,347 - #23 ]
INFO  03:54:55,347 - #8 ,
INFO  03:54:55,347 - #14 2
INFO  03:54:55,347 - #7 )
INFO  03:54:55,347 - #7 )
INFO  03:54:55,347 - #5 ;
INFO  03:54:55,347 - #4 }
INFO  03:54:55,347 - #4 }
INFO  03:54:55,370 - ===================================
INFO  03:54:55,375 - Deklarisana konstanta jedan i ima vrednost 1 na liniji 5
INFO  03:54:55,376 - Deklarisana promenljiva i na liniji 7
INFO  03:54:55,376 - Deklarisana promenljiva ibool na liniji 8
INFO  03:54:55,376 - Deklarisan niz niz na liniji 10
INFO  03:54:55,376 - Obradjuje se funkcija sum na liniji 13
INFO  03:54:55,376 - Deklarisan parametar z na liniji 13
INFO  03:54:55,376 - Deklarisan parametar d na liniji 13
INFO  03:54:55,377 - Funkcija sum uspesno definisana na liniji 15
INFO  03:54:55,377 - Obradjuje se funkcija inkrement na liniji 18
INFO  03:54:55,377 - Deklarisan parametar a na liniji 18
INFO  03:54:55,377 - Deklarisan parametar inc na liniji 18
INFO  03:54:55,377 - Deklarisana promenljiva pom na liniji 18
INFO  03:54:55,378 - Postavljen formalni parametar z na liniji 23
INFO  03:54:55,378 - Postavljen formalni parametar d na liniji 23
INFO  03:54:55,378 - Poziv funkcije sum na liniji 23
INFO  03:54:55,378 - Funkcija inkrement uspesno definisana na liniji 23
INFO  03:54:55,378 - Obradjuje se funkcija verify na liniji 26
INFO  03:54:55,378 - Funkcija verify uspesno definisana na liniji 28
INFO  03:54:55,378 - Obradjuje se funkcija main na liniji 31
INFO  03:54:55,379 - ForStm(
  ForStmtDesign(
    DesignEqExpr(
      DesignatorName(
       i
      ) [DesignatorName]
      NoMinus(
        TermExpr(
          TermFactor(
            ConstFactor(
              FactNumConst(
               0
              ) [FactNumConst]
            ) [ConstFactor]
          ) [TermFactor]
        ) [TermExpr]
      ) [NoMinus]
    ) [DesignEqExpr]
  ) [ForStmtDesign]
  ForCond(
    SingleCondition(
      SingleFact(
        CondFact(
          NoMinus(
            TermExpr(
              TermFactor(
                FactorVar(
                  DesignatorName(
                   i
                  ) [DesignatorName]
                  NoFuncParens(
                  ) [NoFuncParens]
                ) [FactorVar]
              ) [TermFactor]
            ) [TermExpr]
          ) [NoMinus]
          RelExpression(
            Less(
            ) [Less]
            NoMinus(
              TermExpr(
                TermFactor(
                  ConstFactor(
                    FactNumConst(
                     5
                    ) [FactNumConst]
                  ) [ConstFactor]
                ) [TermFactor]
              ) [TermExpr]
            ) [NoMinus]
          ) [RelExpression]
        ) [CondFact]
      ) [SingleFact]
    ) [SingleCondition]
  ) [ForCond]
  ForStmtDesign(
    DesignInc(
      DesignatorName(
       i
      ) [DesignatorName]
    ) [DesignInc]
  ) [ForStmtDesign]
  StatementInside(
    Statements(
      NoStmt(
      ) [NoStmt]
      IfStatementNotMatch(
        SingleCondition(
          SingleFact(
            CondFact(
              NoMinus(
                TermExpr(
                  TermFactor(
                    FactorVar(
                      DesignatorName(
                       i
                      ) [DesignatorName]
                      NoFuncParens(
                      ) [NoFuncParens]
                    ) [FactorVar]
                  ) [TermFactor]
                ) [TermExpr]
              ) [NoMinus]
              RelExpression(
                Equal(
                ) [Equal]
                NoMinus(
                  TermExpr(
                    TermFactor(
                      ConstFactor(
                        FactNumConst(
                         2
                        ) [FactNumConst]
                      ) [ConstFactor]
                    ) [TermFactor]
                  ) [TermExpr]
                ) [NoMinus]
              ) [RelExpression]
            ) [CondFact]
          ) [SingleFact]
        ) [SingleCondition]
        Assignment(
          DesignEqExpr(
            DesignatorName(
             ibool
            ) [DesignatorName]
            NoMinus(
              TermExpr(
                TermFactor(
                  ConstFactor(
                    FactBoolConst(
                     true
                    ) [FactBoolConst]
                  ) [ConstFactor]
                ) [TermFactor]
              ) [TermExpr]
            ) [NoMinus]
          ) [DesignEqExpr]
        ) [Assignment]
      ) [IfStatementNotMatch]
    ) [Statements]
  ) [StatementInside]
) [ForStm] na liniji 38
ERROR 03:54:55,380 - Greska na liniji 48 : Ime niz nije tipa niz!
