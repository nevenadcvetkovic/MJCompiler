// generated with ast extension for cup
// version 0.8
// 18/2/2020 17:9:3


package rs.ac.bg.etf.pp1.ast;

public interface Visitor { 

    public void visit(PrintNumConst PrintNumConst);
    public void visit(ReturnType ReturnType);
    public void visit(VarSquares VarSquares);
    public void visit(ForDesignSt1 ForDesignSt1);
    public void visit(StatementList StatementList);
    public void visit(ForCondition ForCondition);
    public void visit(MulOpLeft MulOpLeft);
    public void visit(Factor Factor);
    public void visit(CondTerm CondTerm);
    public void visit(Designator Designator);
    public void visit(Term Term);
    public void visit(DesExpIdent DesExpIdent);
    public void visit(RelExpr RelExpr);
    public void visit(Condition Condition);
    public void visit(MulOp MulOp);
    public void visit(AddOpRight AddOpRight);
    public void visit(RelOp RelOp);
    public void visit(AssignOp AssignOp);
    public void visit(ActualParamList ActualParamList);
    public void visit(ForDesignSt ForDesignSt);
    public void visit(FactConstType FactConstType);
    public void visit(Declarations Declarations);
    public void visit(FactorFuncParens FactorFuncParens);
    public void visit(VarDeclList VarDeclList);
    public void visit(FormalParamList FormalParamList);
    public void visit(Expr Expr);
    public void visit(NewFactorExpr NewFactorExpr);
    public void visit(AddOp AddOp);
    public void visit(DesignatorStatement DesignatorStatement);
    public void visit(ConstIdentList ConstIdentList);
    public void visit(ActualPars ActualPars);
    public void visit(VarDecls VarDecls);
    public void visit(Statement Statement);
    public void visit(VarIdentList VarIdentList);
    public void visit(AddOpLeft AddOpLeft);
    public void visit(MulOpRight MulOpRight);
    public void visit(Declaration Declaration);
    public void visit(MethodDeclList MethodDeclList);
    public void visit(ConstType ConstType);
    public void visit(FormPars FormPars);
    public void visit(LessEq LessEq);
    public void visit(Less Less);
    public void visit(GreaterEq GreaterEq);
    public void visit(Greater Greater);
    public void visit(NotEqual NotEqual);
    public void visit(Equal Equal);
    public void visit(ModEq ModEq);
    public void visit(DivEq DivEq);
    public void visit(MulEq MulEq);
    public void visit(SubEq SubEq);
    public void visit(AddEq AddEq);
    public void visit(Mod Mod);
    public void visit(Div Div);
    public void visit(Mul Mul);
    public void visit(Sub Sub);
    public void visit(Add Add);
    public void visit(MulRight MulRight);
    public void visit(MulLeft MulLeft);
    public void visit(AddRight AddRight);
    public void visit(AddLeft AddLeft);
    public void visit(MulAss MulAss);
    public void visit(AddAss AddAss);
    public void visit(AssEq AssEq);
    public void visit(SQExp SQExp);
    public void visit(DesignatorName DesignatorName);
    public void visit(DesignatorClass DesignatorClass);
    public void visit(ActualParam ActualParam);
    public void visit(ActualParams ActualParams);
    public void visit(NoActuals NoActuals);
    public void visit(Actuals Actuals);
    public void visit(LFuncParen LFuncParen);
    public void visit(NoFuncParens NoFuncParens);
    public void visit(FactorFuncParen FactorFuncParen);
    public void visit(NoNewFactorExpr NoNewFactorExpr);
    public void visit(NewFactorExp NewFactorExp);
    public void visit(FactCharConst FactCharConst);
    public void visit(FactBoolConst FactBoolConst);
    public void visit(FactNumConst FactNumConst);
    public void visit(FactorNew FactorNew);
    public void visit(FactorExpr FactorExpr);
    public void visit(FactorVar FactorVar);
    public void visit(ConstFactor ConstFactor);
    public void visit(TermFactor TermFactor);
    public void visit(MulTerm MulTerm);
    public void visit(MinusExpr MinusExpr);
    public void visit(TermExpr TermExpr);
    public void visit(AddExpr AddExpr);
    public void visit(NoForCond NoForCond);
    public void visit(ForCond ForCond);
    public void visit(NoForDesign1 NoForDesign1);
    public void visit(ForStmtDesign1 ForStmtDesign1);
    public void visit(NoForDesign NoForDesign);
    public void visit(ForStmtDesign ForStmtDesign);
    public void visit(NoRelop NoRelop);
    public void visit(RelExpression RelExpression);
    public void visit(CondFact CondFact);
    public void visit(SingleFact SingleFact);
    public void visit(CondTerms CondTerms);
    public void visit(SingleCondition SingleCondition);
    public void visit(Conditions Conditions);
    public void visit(DontPrintNum DontPrintNum);
    public void visit(PrintNum PrintNum);
    public void visit(DesignDec DesignDec);
    public void visit(DesignInc DesignInc);
    public void visit(DesignFunc DesignFunc);
    public void visit(DesignEqExpr DesignEqExpr);
    public void visit(Rparen Rparen);
    public void visit(Ident Ident);
    public void visit(Else Else);
    public void visit(ForEach ForEach);
    public void visit(IfStatementNotMatch IfStatementNotMatch);
    public void visit(IfStatementMatch IfStatementMatch);
    public void visit(StatementInside StatementInside);
    public void visit(ErrorCond ErrorCond);
    public void visit(ForStm ForStm);
    public void visit(ContinueSt ContinueSt);
    public void visit(BreakSt BreakSt);
    public void visit(ReturnNoExpr ReturnNoExpr);
    public void visit(ReturnExpr ReturnExpr);
    public void visit(ReadDesign ReadDesign);
    public void visit(PrintStmt PrintStmt);
    public void visit(ErrorStmt ErrorStmt);
    public void visit(DesStatementClass DesStatementClass);
    public void visit(NoStmt NoStmt);
    public void visit(Statements Statements);
    public void visit(ErrorFParDecl ErrorFParDecl);
    public void visit(NoSquares NoSquares);
    public void visit(Squares Squares);
    public void visit(FormalParamDecl FormalParamDecl);
    public void visit(SingleFormalParamDecl SingleFormalParamDecl);
    public void visit(FormalParamLists FormalParamLists);
    public void visit(ErrorPDecl ErrorPDecl);
    public void visit(NoFormParam NoFormParam);
    public void visit(FormParamss FormParamss);
    public void visit(VoidType VoidType);
    public void visit(ReturnTypes ReturnTypes);
    public void visit(MethodTypeName MethodTypeName);
    public void visit(MethodDecl MethodDecl);
    public void visit(NoMethodDecl NoMethodDecl);
    public void visit(MethodDeclarations MethodDeclarations);
    public void visit(Type Type);
    public void visit(CharConst CharConst);
    public void visit(BoolConst BoolConst);
    public void visit(NumConst NumConst);
    public void visit(ConstIdent ConstIdent);
    public void visit(SingleConst SingleConst);
    public void visit(ConstIdents ConstIdents);
    public void visit(ConstDecl ConstDecl);
    public void visit(ErrorVarIdent ErrorVarIdent);
    public void visit(NoVarSquares NoVarSquares);
    public void visit(VarSquare VarSquare);
    public void visit(VarIdent VarIdent);
    public void visit(SingleIdent SingleIdent);
    public void visit(VarIdents VarIdents);
    public void visit(ErrorVarDecl ErrorVarDecl);
    public void visit(VarDecl VarDecl);
    public void visit(NoVarDecl NoVarDecl);
    public void visit(VarDeclarations VarDeclarations);
    public void visit(DeclConsts DeclConsts);
    public void visit(DeclVars DeclVars);
    public void visit(NoDecl NoDecl);
    public void visit(DeclarationsVarsConsts DeclarationsVarsConsts);
    public void visit(ProgName ProgName);
    public void visit(Program Program);

}
